var assert = require("assert");
var sinon = require("sinon");
var nock = require("nock");

var GoogleParseAuth = require("./GoogleParseAuth");

var GOOGLE_CONSUMER_KEY = "992955494422-u92pvkijf7ll2vmd7qjf2hali813q7pv.apps.googleusercontent.com";
var GOOGLE_CONSUMER_SECRET = "rLkby14J_c-YkVA96KCqeajC";

describe('GoogleParseAuth', function() {
	describe('refreshAccessToken', function() {
		var parseMock = sinon.mock({
			find: function(clazz, id, callback) {
				callback(null, {'google_access_token': 'faketoken'});
			},
			update: function(clazz, id, data, callback) {
				callback(null, {});
			}
		});

		var google = nock('https://accounts.google.com')
                .post('/o/oauth2/token', {refresh_token:'refreshtoken',
            							client_id: GOOGLE_CONSUMER_KEY,
            							client_secret: GOOGLE_CONSUMER_SECRET,
            							grant_type: 'refresh_token'})
                .reply(200, {access_token: 'newtoken',
            				expires_in:3920,
            				token_type:'Bearer'
            			});

		parseMock.expects("find").once();
		parseMock.expects("update").once().withArgs('User', 'myID', {'google_access_token': 'newtoken'});

		var google_parse_auth = new GoogleParseAuth.GoogleParseAuth(parseMock, 
															GOOGLE_CONSUMER_KEY, 
															GOOGLE_CONSUMER_SECRET);

		console.log(google_parse_auth);

		var new_access_token = google_parse_auth.refreshAccessToken('myID');
		assert.equal(new_access_token, 'newtoken');

		parseMock.verify();

	});
});