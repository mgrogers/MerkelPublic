exports.GoogleParseAuth = GoogleParseAuth;

var https = require('https');
var querystring = require('querystring');

function GoogleParseAuth(parse_app, consumer_key, consumer_secret) {
	this.parse_app = parse_app;
	this.google_consumer_key = consumer_key;
	this.google_consumer_secret = consumer_secret;
}

GoogleParseAuth.prototype.refreshAccessToken = function(userId, callback) {
	var T = this;
	this.parse_app.find('User', userId, function(err, response) {
		var refresh_token = response.google_refresh_token;
		var request_data = querystring.stringify({
					refresh_token: refresh_token,
					client_id: T.google_consumer_key,
					client_secret: T.google_consumer_secret,
					grant_type: 'refresh_token'
		});

		var options = {
			hostname: 'accounts.google.com',
			path: '/o/oauth2/token',
			method: 'POST',
			headers: {
				'Content-Type': 'aplication/x-www-form-urlencoded',
				'Content-Length': request_data.length
			}
		}

		var request = https.request(options, function(res) {
			console.log("GoogleParseAuth - statusCode: ", res.statusCode);
			console.log("GoogleParseAuth - headers: ", res.headers);
			res.setEncoding('utf8');
			res.on('data', function(data) {
				data = JSON.parse(data);
				var new_access_token = data.access_token;
				T.parse_app.update('User', userId, {google_access_token: new_access_token}, function(err, response){});
				console.log("GoogleParseAuth - received new access token: " + new_access_token);
				callback(new_access_token);
			});
		});
		request.write(request_data);
		request.end();

		request.on('error', function(e) {
			console.error(e);
			callback(false);
		});
	});


}